TINY KERNEL:
------------
The goals of the project are:
	1) It should be modernday kernel with a small footprint.
	2) To offload as much driver code and file system in to the Host operating system if it not running on the bare metal.
	3) poweful command line similer to vxworks to debug the environment.
	
Design :

mm : memory management
vfs : virtual filesystem
kernel : cpu scheduling

------------------------------
Code Organization:
  Entire code is splitted into the following modules:

1) scheduling (sc)
	sc_fork
	sc_createThread
	sc_exit
	sc_schedule
	
2) memory management ( vm,mm)
	vm_brk
	vm_mmap
	vm_munmap
	vm_findVma
	vm_printMmaps

	mm_getFreePages	
	mm_putFreePages	
	mm_malloc
	mm_free
	mm_kmem_*
	
		
3) isr  (AR)
4) Drivers (DR)
5) utilities (UT)
	ut_putchar
	ut_printf
	ut_memcpy
	ut_memset
	ut_strcmp
	ut_strcpy
	ut_strlen

_____________________________
 Running :
  -> multiboot (hd0)/kernel
  -> boot

vim commands:
    ESC V G =   for entire file
    ESC V % =  for a block
  V= visual mode
------------------------------
Constructing the image for grub2 (Not sucessfull):

dd if=/dev/zero of=bin/g2_image bs=512 count=8000
--sudo losetup /dev/loop0 -d
--sudo losetup /dev/loop0  bin/g2_image
--sudo mke2fs /dev/loop0
mke2fs bin/g2_image
sudo mount /dev/loop0 /tmp/ab/
populate files into /tmp/ab/

sudo umount /tmp/ab
sudo grub-install --force  /dev/loop0 
-------------------------------
WorkAround:
    - use old image as bootable disk for grub, use second disk to store the kernel.
-----------------------------------
qemu running:
 sudo ./qemu-system-x86_64 -s -m 1024M -L /home/njana/qemu/opt/qemu.12.5/share/qemu -hda /home/njana/tinykernel/bin/old_g2image -hdb /home/njana/tinykernel/bin/g2_image  -enable-kvm -chardev socket,path=/tmp/jana,id=jana -device ivshmem,chardev=jana,size=2m,msi=off -vnc :4
-------------------------------------
