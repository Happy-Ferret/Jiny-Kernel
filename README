JINY KERNEL   (JINY : Jana's tINY  toy kernel)

1) WHAT IS JINY?.
 Jiny is a small foot print Toy kernel, It is yet another Unix based kernel. It will be specialised more for virtual machine environment but can also use on baremetal. 
  
2) ON WHAT HARDWARE DOES IT RUN?
 It was fully tested for x86-64. partially done for x86-32.

3) For What purpose JINY will be used initially?
 JINY will be used initially 
	a) To model the page cache(MRU+LRU) suitable for hadoop like applications.
	b) To model Host based filesystem(HFS): HFS is filesystem run in guest OS but does file i/o using the shared memory between the guest and host os. HFS does not need any block drivers, it communicated with block devices using the shared memory between guest and host OS.  
	c) Benchmarking virtio net performance.
	d) To model Centralised page cache shared by different vm's.
------------------------------------------

The goals of the project are:
	1) It should be monalitic unlix based kernel with a small footprint. 
	2) powerful command line and debug environment.
	3) Higly modularise:  To define well defined interface between subsystems , so as any subsystems can be replaced by keeping the interface same. (see include/interface.h for more details.
	4) Virtualization friendly: Rich virtualization features like virtio,xen para drivers, hot cpu plugin, hot mem plugin, hot network plugin.
	5) Running directly linux based application like  Busy box on top of jiny as it is, for this need support almost all system call. (partially completed).

------------------------------------------
Feature Currently Available:

Page Cache: 
   - LRU and MRU based (based on the below published paper)
   
File System: 
   - 9p
   - Host based file system based on ivshm(Inter Vm Shared Memory) 
   
Virtualization:
    - Xen : xenbus, network driver using xen paravirtualised.
    - KVM : virtio + P9 filesystem
    - KVM : virtio + Network (test server with udp stack(tcp/ip))
    - KVM : virtio + memory ballooning
      
SMP:
   - APIC,MSIX
   
Networking:
   - XEN: TCP/IP stack(from LWIP) integrated with XEN paravirtualised Network driver .
   - KVM + LWIP4.0

User level:
   - user app(ring-3) can run in user mode without libc and without shared libs.
   - app compiled statically on linux can RUN sucessfully without using advanced system calls.

    
TODO Features:
  - cpu-hotplug.
  - clock enhancements.
  - centralised page cache.
  - memory-hotplug(partially done - memory ballooning).
  - running linux based app like busybox(partially completed):- implementing necessary system calls(basic calls are present , advanced like futex are need to be developed).

------------------------------------------------------------------------------------

papers:
  1) doc/PageCache-Open-Cirrus.pdf  - paper appered @ open cirrus-2011.
  2) doc/malloc_paper_techpulse_submit_final.pdf  - memory optimization techiniques.
  3) doc/pagecache.txt - jiny pagecache implementation
